package course.hello;

import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;


@EnableWebSecurity
public class SecConfig extends WebSecurityConfigurerAdapter {

	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		
		auth.inMemoryAuthentication()
		.withUser("aj")
		.password("aj")
		.roles("admin")
		.and()
		.withUser("foo")
		.password("foo")
		.roles("user");
	}
	@Bean
 public PasswordEncoder getPasswordEncoder() {
		return new BCryptPasswordEncoder();
		
	}
	@Override
	protected void configure(HttpSecurity http) throws Exception {
		http.authorizeRequests()
		    .antMatchers("/user").hasAnyRole("user","admin")
		    .antMatchers("/admin").hasRole("admin")
		    .antMatchers("/").permitAll()
		    .and().formLogin();
	}
	
	
	
	

}
